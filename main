#!/bin/bash

set -euo pipefail

function on_failure {
    echo "The script" "${0##*/}" "has failed"
}

trap on_failure ERR

source ./scripts/getopts

# housekeeping
TIMESTAMP=$(date +"%Y-%m-%d_%H.%M.%S")
OUT_DIR="output/output_$TIMESTAMP"
mkdir -p $OUT_DIR $OUT_DIR/tmp

declare -a SCRIPTS=(
"preamble.R"
"create-object.R"
"integrate.R"
)

# do check for multimodal routine
if [[ "${atac:-}" == "TRUE" ]]
then
    echo "Creating ATAC object"
    SCRIPTS=("preamble.R" "atac-multi-wnn.R")
    echo "${SCRIPTS[@]}"
elif [[ "${cite:-}" == "TRUE" ]]
then
    echo "Creating CITE object"
    SCRIPTS=("preamble.R" "cite-wnn.R")
    echo "${SCRIPTS[@]}"
else
    echo "Creating traditional Seurat object"
fi

# execute pipeline scripts
for i in "${SCRIPTS[@]}"
do
    echo "coreSC master version commit $(cat .git/refs/heads/master | cut -c -7)" >> $OUT_DIR/log.txt
    Rscript ./scripts/$i $OUT_DIR 2>&1 | tee -a $OUT_DIR/log.txt
done

cp ./config/params.csv ./config/samples.csv $OUT_DIR
rm -rf $OUT_DIR/tmp

